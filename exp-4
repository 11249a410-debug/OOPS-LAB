Aim:
. Implement passing object as function arguments and return object from function
--------------------------------------------
Algorithm:
1:Start the program.
2:Create a class named MyClass with:
3:A public integer data member value.
4:A constructor that initializes value with an argument.
5:Define a function modifyObject(MyClass obj) that:
6:Takes an object of MyClass as a parameter (passed by value).
7:Modifies obj.value to 100.
8:In the main() function:
a. Create an object originalObj of class MyClass with initial value 10.
b. Display the value before modification.
c. Call the function modifyObject(originalObj).
d. Display the value after the function call.
9:Observe that the value of originalObj remains unchanged because it was passed by value (copy made).
10:End the program.
--------------------------------------------
Code:
#include <iostream>

    class MyClass {
    public:
        int value;
        MyClass(int v) : value(v) {}
    };

    // Function that takes an object by value
    void modifyObjectByValue(MyClass obj) {
        obj.value = 100; // Modifies the copy, not the original
        std::cout << "Inside function (by value): " << obj.value << std::endl;
    }

    int main() {
        MyClass originalObj(10);
        std::cout << "Original object before call: " << originalObj.value << std::endl;
        modifyObjectByValue(originalObj);
        std::cout << "Original object after call: " << originalObj.value << std::endl; // Still 10
        return 0;
    }
--------------------------------------------
Output:
Original value before: 10
Original value after: 10
--------------------------------------------
result:
successfully Implemented passing object as function arguments and return object from function in oop using cpp
